/* Set the CSS variable based on an estimated height */
:root {
  --header-height: 80px; /* Estimate the height */
  --footer-height: 68px; /* Set the footer height to match the header height */
}

/* Basic reset for consistent margins and paddings */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-size: 18px;
  font-family: 'Times New Roman', serif;
}

html,
body {
  overflow: hidden;
}

body {
  min-height: 100vh;
  background-color: var(--background);
  color: var(--secondary-foreground);

  justify-content: center;
  align-items: center;
  margin-top: 90px;
}

/*  When the body has display: flex;
    its children (header, footer, and main) become flex items. 
    Flex items do not expand to fill their container's width
    unless you explicitly set their width.
*/

main {
  display: grid;
  grid-template-columns: 1fr; /* One column taking full width */
  grid-template-rows: 1fr; /* One rows, each taking full height */
  height: calc(
    100vh - var(--header-height) - var(--footer-height)
  ); /* The viewport minus the header and footer heights */
  width: 100%; /* Full width */
  gap: 1rem; /* Optional, adds space between rows/columns */
  position: fixed; /* Fixed positioning */
  top: var(--header-height); /* Position it below the header */
  left: 0; /* Ensure it's aligned to the left */
  right: 0; /* Ensure it's aligned to the right */
  overflow-y: auto; /* Enable scrolling for content */
  scroll-snap-type: y mandatory; /* Enable snapping in the vertical direction */
  scroll-behavior: smooth; /* Enable smooth scrolling */
}

header,
footer {
  display: flex;
  align-items: center;
  position: fixed;
  background-color: var(--secondary);
  color: var(--secondary-foreground);
  gap: 10px;
  width: 100%; /* Make the header and footer take full width */
  z-index: 10;
}
header>h2{
  font-size: 4rem;
}

a{
  margin-bottom: 2rem;
  margin-top: 5rem;
  color: var(--muted-foreground);
}

footer {
  bottom: 0;
  width: 100%;
  box-shadow: 1px 1px 4px 0 rgba(0, 0, 0, 0.1);
  height: var(--footer-height);
}

header {
  position: fixed;
  top: 0;
  width: 100%;
  box-shadow: 1px 1px 4px 0 rgba(0, 0, 0, 0.1);
  height: var(--header-height);
  text-align: center;
  justify-content: center;
  align-items: center;
}

header div,
footer div {
  background-color: var(--primar-backgroundy);
  padding: 10px;
  text-align: center;
  display: block;
}

h1 {
  color: var(--h1);
  font-size: 2rem;
}
h2 {
  color: var(--h2);
}
h3,
h4 {
  margin-top: 1rem;
  color: var(--destructive);
  font-size: 1.5rem;
}


article {
  margin-bottom: 40px;
  background-color: var(--accent);
  padding: 20px 40px;
  border-radius: 10px;
  color: var(--destructive);
}

blockquote {
  background-color: var(--foreground);
  border-left: 10px solid var(--muted);
  margin: 20px 0;
  padding: 10px 20px;
}

cite {
  display: block;
  margin-top: 10px;
  font-size: 0.9em;
  color: var(--primary);
  text-align: center;
  justify-content: center;
  align-items: center;
}

p {
  margin-bottom: 1rem;
  line-height: 1.8;
}

.highlight {
  color: var(--primary);
}

.header-container h1 {
  font-size: 2.5em;
  color: var(--destructive);
  margin: 0;
  padding-bottom: 20px;
}

.image-container {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}

.image-container img {
  width: 100%;
  height: auto;
}

.toc {
  text-align: center;
  margin: 20px 0;
}

.toc a {
  margin: 0 10px;
  padding: 10px 20px;
  background-color: var(--muted);
  border-radius: 5px;
  color: var(--foreground);
  text-decoration: none;
}

.toc a:hover {
  background-color: var(--primary);
}

.final-section {
  text-align: center;
  padding: 40px 20px;
  background-color: var(--muted);
  color: var(--foreground);
}

.final-section a {
  display: block;
  margin: 10px 0;
  color: var(--foreground);
  text-decoration: none;
  font-weight: bold;
}

.final-section a:hover {
  color: var(--accent);
}

.img-medium {
  width: 40vw;
  border-radius: 2%;
}